<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
	<channel>
		<title>[da]nilo.dev</title>
		<link>http://nilo.dev/</link>
		<description>Blog Posts</description>
		<copyright>2020</copyright>
		<pubDate>Thu, 02 Apr 2020 00:25:14 GMT</pubDate>
		<lastBuildDate>Thu, 02 Apr 2020 00:25:14 GMT</lastBuildDate>
		<item>
			<title>CRIANDO UM BLOG</title>
			<link>http://nilo.dev/post/criando-um-blog</link>
			<description>&lt;p&gt;Este projeto não é nada ambicioso, eu precisava somente de um lugar onde pudesse escrever, que sirva como tracking quando eu ou outra pessoa quiser consultar algum conteúdo disponível aqui. Queria observar se tive algum progresso na parte de desenho e animação e não fazia sentido pra mim fazer isso através de uma rede social.&lt;/p&gt;</description>
			<enclosure url="http://nilo.dev/images/bg/desert-alone.jpg" length="0" type="image" />
			<guid>http://nilo.dev/post/criando-um-blog</guid>
			<pubDate>Wed, 01 Apr 2020 00:00:00 GMT</pubDate>
			<content:encoded>&lt;h1 id="vamos-ao-primeiro-post-novamente"&gt;Vamos ao primeiro post, novamente.&lt;/h1&gt;
&lt;p&gt;Este projeto não é nada ambicioso, eu precisava somente de um lugar onde pudesse escrever, que sirva como tracking quando eu ou outra pessoa quiser consultar algum conteúdo disponível aqui. Queria observar se tive algum progresso na parte de desenho e animação e não fazia sentido pra mim fazer isso através de uma rede social.&lt;/p&gt;
&lt;p&gt;Fiz algumas tentativas de uso com outras ferramentas no passado, mas escrever com &lt;em&gt;markdown&lt;/em&gt; e manter o conteúdo no Github tem se mostrado a melhor experiência.&lt;/p&gt;
&lt;h1 id="escolha-do-wyam-com-github-pages"&gt;Escolha do Wyam com Github Pages&lt;/h1&gt;
&lt;p&gt;As premissas para a escolha de uma ferramenta de blogging eram:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Possibilidade de categorização por tags;&lt;/li&gt;
&lt;li&gt;Facilidade de recuperar o conteúdo e reorganiza-lo para outras plataformas;&lt;/li&gt;
&lt;li&gt;Hosting Free;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dentre as ferramentas possíveis, estavam:&lt;/p&gt;
&lt;h2 id="medium"&gt;Medium&lt;/h2&gt;
&lt;p&gt;O Medium de longe seria a opção mais rápida para iniciar este projeto, basta criar uma conta e começar a popular conteúdo. No entanto, o medium ao meu ver da um suporte muito fraco em relação a categorização - levando em consideração que este projeto vai possuir mais de um tipo de assunto.
Há também a falta de flexibilidade para importação e exportação de conteúdo.&lt;/p&gt;
&lt;p&gt;Fosse o caso de agregar seguidores no meu feed e ter uma regularidade de postagem alta, o Medium até seria uma boa escolha... Não é o meu caso.&lt;/p&gt;
&lt;p&gt;Não foi desta vez Medium.&lt;/p&gt;
&lt;h2 id="notion"&gt;Notion&lt;/h2&gt;
&lt;p&gt;Venho utilizando o Notion para documentações de projetos pessoais e ele vem se provado uma ótima ferramenta. Possui templates para diversos tipos de documentos, suporte a media com copy/paste de imagens e videos no corpo da página e até a criação de table as dinâmicas e kanbans.
O Notion não é uma ferramenta de Blogging. Utilizando uma &lt;a href="https://github.com/kjk/notionapi"&gt;lib não oficial&lt;/a&gt;, é possível exportar os conteúdos em markdown, que adicionando os headers corretos deixa o conteúdo exportável para o Github Pages tranquilamente, utilizando em conjunto uma ferramenta como o Jekyll ou Wyam.&lt;/p&gt;
&lt;p&gt;Não utilizei o Notion pois ele neste momento iria complicar um deploy que pode ser feito sem ele. O suporte a mídia, para adicionar imagens e videos nos posts iria resolver parte do trabalho manual, mas o arquivo .zip, contendo o conteúdo da página criada gerado durante a exportação ainda necessitaria de algumas correções, como mover a mídia para a pasta correta e corrigir os paths.&lt;/p&gt;
&lt;p&gt;Quem sabe no futuro, com tempo para adaptar as integrações.&lt;/p&gt;
&lt;h2 id="jekyll"&gt;Jekyll&lt;/h2&gt;
&lt;h2 id="wyam-e-github-pages"&gt;Wyam e Github Pages&lt;/h2&gt;
&lt;p&gt;A abordagem com o Notion utilizaria também o Github Pages, mas preferi abordar a explição aqui.&lt;/p&gt;
&lt;p&gt;O Github Pages, utilizado principalmente para criação de documentação de projetos, traz a possiblidade de hospedar conteúdo estático e, isso é simplesmente perfeito para Blogs.
Claro que dependo do conteúdo e a necessidade de uso de plugins em alguns casos, um Wordpress trás uma abordagem muito mais interessante para criação e manutenção de um Blog, mas nos trás a questão: Qual a real necessidade de utilizar conteúdo dinâmico para um site que pode ser estático? Minha maior premissa era não gastar dinheiro desnecessáriamente, o que descarta a contratação de uma área de hospedagem. Sobra o Medium e... O Github!&lt;/p&gt;
&lt;p&gt;Decidido que o conteúdo seria hospedado no Github, a questão agora seria a escolha da ferramenta para gerar o conteúdo estático, baseado em markdown.&lt;/p&gt;
&lt;p&gt;No passado ja havia criado um outro blog utilizando Wyam que, por minha falta de comprometimento, não foi pra frente. Mas eu já investi algum tempo no passado entendendo a ferramenta, o que tornou o processo de criação desta nova página extremamente rápido.&lt;/p&gt;
&lt;h1 id="registro-do-dominio"&gt;Registro do domínio&lt;/h1&gt;
&lt;p&gt;Decididas as ferramentas, hora de contratar um domínio, o que foi o único custo real investido neste projeto. Me comprometi a não gastar muito tempo com isso, pois o meu limite de tempo decidindo e construindo a ferramenta estava no limite entre simplesmente usar o Medium para simplificar o processo, e escolher um nome para o domínio era sempre um processo demorado e desgastante.&lt;/p&gt;
&lt;p&gt;Considerei utilizar a url padrão do Github Pages, algo do tipo &lt;a href="https://daniloalsilva.github.io/"&gt;https://daniloalsilva.github.io/&lt;/a&gt;, até que houvesse uma justificativa real para gastos, e então lembrei que talvez houvesse algum nome de dominio &lt;em&gt;.dev&lt;/em&gt; interessante e curto no ar.&lt;/p&gt;
&lt;p&gt;O Google adquiriu o &lt;a href="https://en.wikipedia.org/wiki/.dev" title="top level domain"&gt;TLD&lt;/a&gt; &lt;em&gt;.dev&lt;/em&gt; e, iniciando em 19 de fevereiro de 2019, passou a comercializar esta extensão para registro de domínios - o que faz com que diversos curtos ainda estejam disponíveis para compra. Aliás, se você quer registrar um domínio .dev e ainda não fez, essa é a hora.&lt;/p&gt;
&lt;p&gt;Com algumas pesquisas, achei um nome curto para meu domínio, &amp;quot;nilo.dev&amp;quot; e a justificativa de que ele era curto suficiente para lembrar e me permitiria ter um email d&amp;#64;nilo.dev bastaram.&lt;/p&gt;
&lt;h2 id="configuracao-de-dns"&gt;Configuração de DNS&lt;/h2&gt;
&lt;p&gt;Registrei o domínio utilizando o Google Domains &lt;a href="https://domains.google/"&gt;Google Domains&lt;/a&gt; e a experiência não poderia ter sido melhor. Interface fluída, configurações apresentadas de forma clara, everything works like a charm.&lt;/p&gt;
&lt;p&gt;Utilizar o domínio com o Github Pages é uma tarefa muito simples, basta em &amp;quot;Registros de recurso personalizados&amp;quot; apontar as entradas padrão de dns para os ips &lt;em&gt;185.199.108.153, 185.199.109.153, 185.199.110.153, 185.199.111.153&lt;/em&gt; e, a entrada www como cname para o root domain, no meu caso nilo.dev.&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/posts/2020/google-dns.jpg" class="img-fluid" alt="google-dns" /&gt;
painel de configuração do Google Domains&lt;/p&gt;
&lt;h1 id="criando-o-conteudo-estatico-com-wyam"&gt;Criando o conteúdo estático com Wyam&lt;/h1&gt;
&lt;p&gt;O Wyam é uma ferramenta extremamente simples, tanto referente sua instalação quanto customização para o blog. Os exemplos abaixo foram feitos na minha maquina Windows mas o Wyam foi desenvolvido em dotnetcore 2.1.0, que deve rodar tranquilamente em Linux também com algumas adaptações nos comandos executados. Estou executando eles de uma maquina recém instalada, o que me forçou a instalar o dotnetcore e a IDE.&lt;/p&gt;
&lt;p&gt;Instalando o instalador de pacotes (chocolatey):&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Instalando o Visual Studio Code&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;choco install vscode -y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Instalando o dotnetcore, versões &amp;quot;lastest&amp;quot; e &amp;quot;2.1.0&amp;quot;, esta última utilizada no Wyam.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;choco install dotnetcore -y
choco install dotnetcore-sdk -y
choco install dotnetcore --version=2.1.0 --sidebyside -y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Instalando o Wyam&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;dotnet tool install -g Wyam.Tool
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;E por ultimo, o Cake para automatizar o submit dos posts:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;choco install cake.portable -y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Feito isso, já é possível testar o Wyam localmente. Crie uma pasta raiz para o projeto e execute os comandos:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;wyam new --recipe Blog
wyam build --recipe Blog --theme CleanBlog -p
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Com isso, se tudo deu certo uma mensagem semelhante a abaixo será exibida no console e a página http://localhost:5080 vai estar disponível para acesso local:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Preview server listening at http://localhost:5080 and serving from path file:///C:/Users/danil/Projects/new_blog/output
Hit Ctrl-C to exit
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="enviando-o-conteudo-para-o-github-pages"&gt;Enviando o conteúdo para o Github Pages&lt;/h1&gt;
&lt;h1 id="disqus"&gt;Disqus&lt;/h1&gt;
&lt;h1 id="email"&gt;Email&lt;/h1&gt;
</content:encoded>
		</item>
	</channel>
</rss>